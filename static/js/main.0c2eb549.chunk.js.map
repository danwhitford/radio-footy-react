{"version":3,"sources":["components/Match.js","components/MatchDay.js","components/FilterOpts.js","App.js","reportWebVitals.js","index.js"],"names":["Match","title","station","competition","time","className","MatchDay","matches","date","map","match","FilterOpts","filterCategory","filterValue","setFilterCategory","setFilterValue","competitions","flatMap","day","filter","x","i","a","indexOf","sort","teams","split","stations","filterCategoryOptions","value","label","filterValueOptions","filterOptions","opt","placeholder","onChange","e","options","find","o","isClearable","isSearchable","App","useState","matchDays","setMatchDays","useEffect","fetch","then","r","json","j","includes","length","console","warn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAceA,G,MAXD,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAC5C,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SAA6BD,IAC7B,qBAAKC,UAAU,cAAf,SAA8BJ,IAC9B,qBAAKI,UAAU,gBAAf,SAAgCH,IAChC,qBAAKG,UAAU,oBAAf,SAAoCF,SCc3BG,G,MAnBE,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAC3B,OACE,qCACE,oBAAIH,UAAU,aAAd,SAA4BG,IAC5B,8BACGD,EAAQE,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,CAEER,QAASQ,EAAMR,QACfE,KAAMM,EAAMN,KACZD,YAAaO,EAAMP,YACnBF,MAAOS,EAAMT,OAJRS,EAAMR,QAAUQ,EAAMT,iB,eCgExBU,EAxEI,SAAC,GAMb,IALLC,EAKI,EALJA,eACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,kBACAC,EAEI,EAFJA,eACAR,EACI,EADJA,QAEIS,EAAeT,EAChBU,SAAQ,SAACC,GAAD,OAASA,EAAIX,QAAQE,KAAI,SAACC,GAAD,OAAWA,EAAMP,kBAClDgB,QAAO,SAACC,EAAGC,EAAGC,GAAP,OAAaA,EAAEC,QAAQH,KAAOC,KACrCG,OACCC,EAAQlB,EACTU,SAAQ,SAACC,GAAD,OAASA,EAAIX,QAAQU,SAAQ,SAACP,GAAD,OAAWA,EAAMT,MAAMyB,MAAM,aAClEP,QAAO,SAACC,EAAGC,EAAGC,GAAP,OAAaA,EAAEC,QAAQH,KAAOC,KACrCG,OACCG,EAAWpB,EACZU,SAAQ,SAACC,GAAD,OAASA,EAAIX,QAAQE,KAAI,SAACC,GAAD,OAAWA,EAAMR,cAClDiB,QAAO,SAACC,EAAGC,EAAGC,GAAP,OAAaA,EAAEC,QAAQH,KAAOC,KACrCG,OAmBGI,EAAwB,CAC5B,CAAEC,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,cAAeC,MAAO,gBAG3BC,EAvBgB,WACpB,OAAQnB,GACN,IAAK,OACH,OAAOa,EAET,IAAK,cACH,OAAOT,EAET,IAAK,UACH,OAAOW,EAET,QACE,MAAO,IAWcK,GAAgBvB,KAAI,SAAAwB,GAAQ,MAAO,CAC5DJ,MAAOI,EACPH,MAAOG,MAGT,OACE,gCACE,cAAC,IAAD,CACEC,YAAY,eACZC,SAAU,SAACC,GACTtB,EAAkBsB,EAAIA,EAAEP,MAAQ,SAElCQ,QAAST,EACTC,MAAOD,EAAsBU,MAAK,SAAAC,GAAC,OAAIA,EAAEV,QAAUjB,MAAmB,OACtE4B,aAAW,EACXC,cAAc,IAEI,SAAnB7B,GACG,cAAC,IAAD,CACEyB,QAASN,EACTI,SAAU,SAACC,GAAD,OAAOrB,EAAeqB,EAAEP,QAClCA,MAAOE,EAAmBO,MAAK,SAAAC,GAAC,OAAIA,EAAEV,QAAUhB,MAAgB,OAChE4B,aAAiC,SAAnB7B,QCkBX8B,MAjFf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNC,EADM,KACKC,EADL,OAE+BF,mBAAS,QAFxC,mBAEN/B,EAFM,KAEUE,EAFV,OAGyB6B,mBAAS,QAHlC,mBAGN9B,EAHM,KAGOE,EAHP,KA6Db,OAxDA+B,qBAAU,WACRC,MAAM,qDACHC,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACG,GAAD,OAAON,EAAaM,QAC3B,CAACN,IAEJC,qBAAU,WACR/B,EAAe,UACd,CAACH,EAAgBG,IAiDlB,sBAAKV,UAAU,MAAf,UACE,cAAC,EAAD,CACEO,eAAgBA,EAChBC,YAAaA,EACbC,kBAAmBA,EACnBC,eAAgBA,EAChBR,QAASqC,IAGX,oBAAIvC,UAAU,QAAd,sBACA,oBAAIA,UAAU,WAAd,2BAxDqB,SAAnBO,GAA6C,SAAhBC,EACxB+B,EAGc,SAAnBhC,EACKgC,EACJnC,KAAI,SAACS,GACJ,OAAO,2BACFA,GADL,IAEEX,QAASW,EAAIX,QAAQY,QAAO,SAACT,GAAD,OAC1BA,EAAMT,MAAMyB,MAAM,OAAO0B,SAASvC,WAIvCM,QAAO,SAACD,GAAD,OAASA,EAAIX,QAAQ8C,OAAS,KACZ,YAAnBzC,EACFgC,EACJnC,KAAI,SAACS,GACJ,OAAO,2BACFA,GADL,IAEEX,QAASW,EAAIX,QAAQY,QACnB,SAACT,GAAD,OAAWA,EAAMR,UAAYW,UAIlCM,QAAO,SAACD,GAAD,OAASA,EAAIX,QAAQ8C,OAAS,KACZ,gBAAnBzC,EACFgC,EACJnC,KAAI,SAACS,GACJ,OAAO,2BACFA,GADL,IAEEX,QAASW,EAAIX,QAAQY,QACnB,SAACT,GAAD,OAAWA,EAAMP,cAAgBU,UAItCM,QAAO,SAACD,GAAD,OAASA,EAAIX,QAAQ8C,OAAS,MAExCC,QAAQC,KACN,+CAAiD3C,GAE5CgC,IAiBUnC,KAAI,SAACS,GAAD,OACnB,cAAC,EAAD,CAAyBV,KAAMU,EAAIV,KAAMD,QAASW,EAAIX,SAAvCW,EAAIV,aCpEZgD,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0c2eb549.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Match.css\";\n\nconst Match = ({ title, station, competition, time }) => {\n  return (\n    <div className=\"match\">\n      <div className=\"match-time\">{time}</div>\n      <div className=\"match-title\">{title}</div>\n      <div className=\"match-station\">{station}</div>\n      <div className=\"match-competition\">{competition}</div>\n    </div>\n  );\n};\n\nexport default Match;\n","import React from \"react\";\nimport Match from \"./Match\";\nimport \"./MatchDay.css\";\n\nconst MatchDay = ({ matches, date }) => {\n  return (\n    <>\n      <h1 className=\"date-title\">{date}</h1>\n      <div>\n        {matches.map((match) => (\n          <Match\n            key={match.station + match.title}\n            station={match.station}\n            time={match.time}\n            competition={match.competition}\n            title={match.title}\n          />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default MatchDay;\n","import React from \"react\";\nimport Select from \"react-select\";\n\nconst FilterOpts = ({\n  filterCategory,\n  filterValue,\n  setFilterCategory,\n  setFilterValue,\n  matches,\n}) => {\n  let competitions = matches\n    .flatMap((day) => day.matches.map((match) => match.competition))\n    .filter((x, i, a) => a.indexOf(x) === i)\n    .sort();\n  let teams = matches\n    .flatMap((day) => day.matches.flatMap((match) => match.title.split(\" v \")))\n    .filter((x, i, a) => a.indexOf(x) === i)\n    .sort();\n  let stations = matches\n    .flatMap((day) => day.matches.map((match) => match.station))\n    .filter((x, i, a) => a.indexOf(x) === i)\n    .sort();\n\n  const filterOptions = () => {\n    switch (filterCategory) {\n      case \"team\": {\n        return teams;\n      }\n      case \"competition\": {\n        return competitions;\n      }\n      case \"station\": {\n        return stations;\n      }\n      default: {\n        return [];\n      }\n    }\n  };\n\n  const filterCategoryOptions = [\n    { value: \"team\", label: \"Team\" },\n    { value: \"station\", label: \"Station\" },\n    { value: \"competition\", label: \"Competition\" },\n  ]\n\n  const filterValueOptions = filterOptions().map(opt => {return {\n    value: opt,\n    label: opt,\n  }})\n\n  return (\n    <div>\n      <Select\n        placeholder=\"Filter by...\"\n        onChange={(e) => {\n          setFilterCategory(e ? e.value : 'None')\n        }}\n        options={filterCategoryOptions}\n        value={filterCategoryOptions.find(o => o.value === filterCategory) || 'None'}\n        isClearable\n        isSearchable={false}\n      />\n      {filterCategory !== \"None\" && (\n          <Select\n            options={filterValueOptions}\n            onChange={(e) => setFilterValue(e.value)}\n            value={filterValueOptions.find(o => o.value === filterValue) || 'None'}\n            isSearchable={filterCategory === 'team'}\n          />\n      )}\n    </div>\n  );\n};\n\nexport default FilterOpts;\n","import React, { useEffect, useState } from \"react\";\nimport MatchDay from \"./components/MatchDay\";\nimport \"./App.css\";\nimport FilterOpts from \"./components/FilterOpts\";\n\nfunction App() {\n  const [matchDays, setMatchDays] = useState([]);\n  const [filterCategory, setFilterCategory] = useState(\"None\");\n  const [filterValue, setFilterValue] = useState(\"None\");\n\n  useEffect(() => {\n    fetch(\"https://shaftoe44.github.io/radio-footy/data.json\")\n      .then((r) => r.json())\n      .then((j) => setMatchDays(j));\n  }, [setMatchDays]);\n\n  useEffect(() => {\n    setFilterValue(\"None\");\n  }, [filterCategory, setFilterValue]);\n\n  const filterMatches = () => {\n    if (filterCategory === \"None\" || filterValue === \"None\") {\n      return matchDays;\n    }\n\n    if (filterCategory === \"team\") {\n      return matchDays\n        .map((day) => {\n          return {\n            ...day,\n            matches: day.matches.filter((match) =>\n              match.title.split(\" v \").includes(filterValue)\n            ),\n          };\n        })\n        .filter((day) => day.matches.length > 0);\n    } else if (filterCategory === \"station\") {\n      return matchDays\n        .map((day) => {\n          return {\n            ...day,\n            matches: day.matches.filter(\n              (match) => match.station === filterValue\n            ),\n          };\n        })\n        .filter((day) => day.matches.length > 0);\n    } else if (filterCategory === \"competition\") {\n      return matchDays\n        .map((day) => {\n          return {\n            ...day,\n            matches: day.matches.filter(\n              (match) => match.competition === filterValue\n            ),\n          };\n        })\n        .filter((day) => day.matches.length > 0);\n    } else {\n      console.warn(\n        'Filter is not \"None\" but is not recognised: ' + filterCategory\n      );\n      return matchDays;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <FilterOpts\n        filterCategory={filterCategory}\n        filterValue={filterValue}\n        setFilterCategory={setFilterCategory}\n        setFilterValue={setFilterValue}\n        matches={matchDays}\n      />\n\n      <h1 className=\"title\">Football</h1>\n      <h2 className=\"subtitle\">on the radio</h2>\n\n      {filterMatches().map((day) => (\n        <MatchDay key={day.date} date={day.date} matches={day.matches} />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}